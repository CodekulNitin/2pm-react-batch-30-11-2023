{"ast":null,"code":"var _jsxFileName = \"/home/appystack_nn/codekul-demo-pro/2pm-react-batch-27-11-2023/my-app/src/components/hooks/Counter.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        count: state.count + 1\n      };\n    case \"DECREMENT\":\n      return {\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n};\nconst Counter = () => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, {\n    count: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"INCREMENT\"\n      }),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"DECREMENT\"\n      }),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"2CGfLNHHCu3V//t40LY8bCkLvpw=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","reducer","state","action","type","count","Counter","_s","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/appystack_nn/codekul-demo-pro/2pm-react-batch-27-11-2023/my-app/src/components/hooks/Counter.js"],"sourcesContent":["import React, { useReducer } from \"react\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { count: state.count + 1 };\n    case \"DECREMENT\":\n      return { count: state.count - 1 };\n    default:\n      return state;\n  }\n};\n\nconst Counter = () => {\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\n\n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <button onClick={() => dispatch({ type: \"INCREMENT\" })}>Increment</button>\n      <button onClick={() => dispatch({ type: \"DECREMENT\" })}>Decrement</button>\n    </div>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAEC,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAG;MAAE,CAAC;IACnC,KAAK,WAAW;MACd,OAAO;QAAEA,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAG;MAAE,CAAC;IACnC;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,MAAMI,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGV,UAAU,CAACG,OAAO,EAAE;IAAEI,KAAK,EAAE;EAAE,CAAC,CAAC;EAE3D,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,GAAG,SAAO,EAACP,KAAK,CAACG,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;QAAEJ,IAAI,EAAE;MAAY,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1Eb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;QAAEJ,IAAI,EAAE;MAAY,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACN,EAAA,CAVID,OAAO;AAAAS,EAAA,GAAPT,OAAO;AAYb,eAAeA,OAAO;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}